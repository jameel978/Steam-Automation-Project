name: Test runner

on: workflow_dispatch

jobs:
  run_python_script:
    name: Test runner
    runs-on: windows-latest  # Use the latest version of Windows

    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Checkout the repository's code

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
              distribution: 'microsoft'
              java-version: '21'


      - name: Set up JS
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Set up Python
        uses: actions/setup-python@v5  # Set up Python environment
        with:
              python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install -r Utils/requirements.txt 

      - uses: browser-actions/setup-chrome@latest

      - uses: browser-actions/setup-edge@latest

      - uses: browser-actions/setup-firefox@latest

      - name: Get Job ID
        id: get_job_id
        shell: bash
        run: |
          GITHUB_API=$(curl -L \
            -H 'Accept: application/vnd.github+json' \
            -H 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
            -H 'X-GitHub-Api-Version: 2022-11-28' \
            https://api.github.com/repos/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}/attempts/${GITHUB_RUN_ATTEMPT}/jobs | jq -r '.jobs[].id')
          echo "github_api=${GITHUB_API}" >> $GITHUB_OUTPUT

      - name: Create Tokens.json file
        shell: bash
        env:
          GITHUB_API: ${{ steps.get_job_id.outputs.github_api }}
          COOKIES: ${{ secrets.COOKIES }}
          JIRA_TOKENS: ${{ secrets.JIRA_TOKENS }}
          RUN_ID: "${{ github.run_id }}_${{$GITHUB_API}}"
          BRANCH_NAME: ${{ github.ref_name}}

        run: python Utils/Create_Tokens.py


      - name: Start Selenium Server HUB
        run: nohup java -jar Utils/selenium-server.jar hub & sleep 10
        shell: bash

      - name: Start Selenium Server nodes
        run: nohup java -jar Utils/selenium-server.jar node --port 5555 --selenium-manager true & sleep 10
        shell: bash

      - name: Running Tests
        run: python Test_runner.py

      - name: Upload Tests reports
        uses: actions/upload-artifact@v2
        with:
          name: Upload Tests reports
          path: Results

      - name: Checkout gh-pages
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages # branch name
          path: gh-pages-dir # checkout path

      - name: Allure Report Action
        uses: mgrybyk/allure-report-branch-js-action@v1
        if: always()
        continue-on-error: true
        with:
          gh_pages: 'gh-pages-dir'
          report_dir: 'allure-results'


      - name: Git Commit and Push Action
        uses: mgrybyk/git-commit-pull-push-action@v1
        if: always()
        with:
          repository: gh-pages-dir
          branch: gh-pages
          pull_args: --rebase -X ours