{"uid":"5f690be99c69a8f4","name":"test_add_to_cart","fullName":"Tests.Steam_website.Cart_UI_API_test.steam_cart_tests_2_firefox#test_add_to_cart","historyId":"a368a3a9c728b4258e52f0108900c513","time":{"start":1711481665655,"stop":1711481730882,"duration":65227},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <Cart_UI_API_test.steam_cart_tests_2_firefox testMethod=test_add_to_cart>\n\n    def test_add_to_cart(self):\n        self.current_page.remove_all_items_from_cart()\n        self.cart_api.add_to_cart(self.access_token,self.test_params['app_id'],self.test_params['bundle_id'])\n        self.current_page.refresh_page()\n>       title_result = self.current_page.get_items_in_carts_names()\n\nTests\\Steam_website\\Cart_UI_API_test.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nLogic\\Website\\Cart_page.py:25: in get_items_in_carts_names\n    items_elems = self.wait_and_get_elements_by_xpath(self.CART_ITEMS)\nInfra\\Driver_instance.py:29: in wait_and_get_elements_by_xpath\n    return WebDriverWait(self.driver, sec).until(EC.presence_of_all_elements_located((By.XPATH, xpath)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"23391f4c-79c1-4ae7-9d1f-1b14a80c19f0\")>\nmethod = <function presence_of_all_elements_located.<locals>._predicate at 0x00000268CAA0E550>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\hostedtoolcache\\windows\\Python\\3.9.13\\x64\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_steam_cart_tests_2_firefox","time":{"start":1711481665655,"stop":1711481665655,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <Cart_UI_API_test.steam_cart_tests_2_firefox testMethod=test_add_to_cart>\n\n    def test_add_to_cart(self):\n        self.current_page.remove_all_items_from_cart()\n        self.cart_api.add_to_cart(self.access_token,self.test_params['app_id'],self.test_params['bundle_id'])\n        self.current_page.refresh_page()\n>       title_result = self.current_page.get_items_in_carts_names()\n\nTests\\Steam_website\\Cart_UI_API_test.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nLogic\\Website\\Cart_page.py:25: in get_items_in_carts_names\n    items_elems = self.wait_and_get_elements_by_xpath(self.CART_ITEMS)\nInfra\\Driver_instance.py:29: in wait_and_get_elements_by_xpath\n    return WebDriverWait(self.driver, sec).until(EC.presence_of_all_elements_located((By.XPATH, xpath)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"23391f4c-79c1-4ae7-9d1f-1b14a80c19f0\")>\nmethod = <function presence_of_all_elements_located.<locals>._predicate at 0x00000268CAA0E550>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\hostedtoolcache\\windows\\Python\\3.9.13\\x64\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException","steps":[],"attachments":[{"uid":"8609fbbdb222584c","name":"Screenshot","source":"8609fbbdb222584c.png","type":"image/png","size":666357}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":1},"afterStages":[{"name":"_unittest_setUpClass_fixture_steam_cart_tests_2_firefox::0","time":{"start":1711481730976,"stop":1711481730976,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"parentSuite","value":"Tests.Steam_website"},{"name":"suite","value":"Cart_UI_API_test"},{"name":"subSuite","value":"steam_cart_tests_2_firefox"},{"name":"host","value":"fv-az1390-668"},{"name":"thread","value":"6052-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.Steam_website.Cart_UI_API_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":2,"unknown":0,"total":3},"items":[{"uid":"f4c088bd57ee9f5c","reportUrl":"https://jameel978.github.io/Steam-Automation-Project/allure-action/main/allure-report/8433962077_1711447064153/#testresult/f4c088bd57ee9f5c","status":"passed","time":{"start":1711446806808,"stop":1711446827699,"duration":20891}},{"uid":"7b5b44bbd1e0299a","reportUrl":"https://jameel978.github.io/Steam-Automation-Project/allure-action/main/allure-report/8433887864_1711446885993/#testresult/7b5b44bbd1e0299a","status":"passed","time":{"start":1711446616093,"stop":1711446644514,"duration":28421}}]},"tags":[]},"source":"5f690be99c69a8f4.json","parameterValues":[]}