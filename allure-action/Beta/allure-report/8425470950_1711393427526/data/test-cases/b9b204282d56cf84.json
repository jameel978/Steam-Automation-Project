{"uid":"b9b204282d56cf84","name":"test_add_to_cart","fullName":"Tests.Steam_website.Cart_UI_API_test.steam_cart_tests_0_chrome#test_add_to_cart","historyId":"5abc9bda508106b7b563648b67746072","time":{"start":1711393165597,"stop":1711393214589,"duration":48992},"status":"broken","statusMessage":"Exception: Login cookies expired","statusTrace":"self = <Cart_UI_API_test.steam_cart_tests_0_chrome testMethod=test_add_to_cart>\n\n    def setUp(self):\n        self.Driver = BrowserWrapper().get_browser(self.browser)\n>       self.current_page = Cart_page(self.Driver,True)\n\nTests\\Steam_website\\Cart_UI_API_test.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nLogic\\Website\\Cart_page.py:18: in __init__\n    super().__init__(cap, login)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Logic.Website.Cart_page.Cart_page object at 0x000002B7B7EE2070>\ncap = (<class 'selenium.webdriver.remote.webdriver.WebDriver'>, {'command_executor': 'http://localhost:4444/wd/hub', 'options': <selenium.webdriver.chrome.options.Options object at 0x000002B7B7EE2340>}, 'chrome')\nlogin = False\n\n    def __init__(self, cap, login=False):\n        super().__init__(cap)\n        self.token = None\n        self.Website_URLS = read_json(\n            os.path.join(os.path.dirname(os.path.abspath(__file__)), \"Configs\", \"Website_URLS.json\"))\n        if login:\n            browser = cap[2]\n            cur_dir = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n            cookies = read_json(os.path.join(cur_dir, \"Utils\", \"tokens.json\"))[browser]\n            self.driver.get(self.Website_URLS['Home_page'])\n            for cookie in cookies:\n                self.driver.add_cookie(cookie)\n            self.refresh_page()\n            try:\n                self.wait_and_get_element_by_xpath(self.LOGIN_BUTTON)\n                login = False\n            except:\n                login = True\n            if not login:\n                self.quit()\n>               raise Exception(\"Login cookies expired\")\nE               Exception: Login cookies expired\n\nLogic\\Website\\Website_Page.py:29: Exception","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_steam_cart_tests_0_chrome","time":{"start":1711393165597,"stop":1711393165597,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"broken","statusMessage":"Exception: Login cookies expired","statusTrace":"self = <Cart_UI_API_test.steam_cart_tests_0_chrome testMethod=test_add_to_cart>\n\n    def setUp(self):\n        self.Driver = BrowserWrapper().get_browser(self.browser)\n>       self.current_page = Cart_page(self.Driver,True)\n\nTests\\Steam_website\\Cart_UI_API_test.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nLogic\\Website\\Cart_page.py:18: in __init__\n    super().__init__(cap, login)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Logic.Website.Cart_page.Cart_page object at 0x000002B7B7EE2070>\ncap = (<class 'selenium.webdriver.remote.webdriver.WebDriver'>, {'command_executor': 'http://localhost:4444/wd/hub', 'options': <selenium.webdriver.chrome.options.Options object at 0x000002B7B7EE2340>}, 'chrome')\nlogin = False\n\n    def __init__(self, cap, login=False):\n        super().__init__(cap)\n        self.token = None\n        self.Website_URLS = read_json(\n            os.path.join(os.path.dirname(os.path.abspath(__file__)), \"Configs\", \"Website_URLS.json\"))\n        if login:\n            browser = cap[2]\n            cur_dir = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n            cookies = read_json(os.path.join(cur_dir, \"Utils\", \"tokens.json\"))[browser]\n            self.driver.get(self.Website_URLS['Home_page'])\n            for cookie in cookies:\n                self.driver.add_cookie(cookie)\n            self.refresh_page()\n            try:\n                self.wait_and_get_element_by_xpath(self.LOGIN_BUTTON)\n                login = False\n            except:\n                login = True\n            if not login:\n                self.quit()\n>               raise Exception(\"Login cookies expired\")\nE               Exception: Login cookies expired\n\nLogic\\Website\\Website_Page.py:29: Exception","steps":[],"attachments":[{"uid":"d723e592f5434bb2","name":"Screenshot","source":"d723e592f5434bb2.png","type":"image/png","size":2049420}],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":true,"attachmentsCount":1,"shouldDisplayMessage":true},"afterStages":[{"name":"_unittest_setUpClass_fixture_steam_cart_tests_0_chrome::0","time":{"start":1711393214683,"stop":1711393214683,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"parentSuite","value":"Tests.Steam_website"},{"name":"suite","value":"Cart_UI_API_test"},{"name":"subSuite","value":"steam_cart_tests_0_chrome"},{"name":"host","value":"fv-az521-716"},{"name":"thread","value":"7732-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.Steam_website.Cart_UI_API_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":5,"unknown":0,"total":8},"items":[{"uid":"c0e2be563647acf8","reportUrl":"https://jameel978.github.io/Steam-Automation-Project/allure-action/Beta/allure-report/8412153355_1711315186328/#testresult/c0e2be563647acf8","status":"passed","time":{"start":1711314828986,"stop":1711314874807,"duration":45821}},{"uid":"1e7a7545d1e8b731","reportUrl":"https://jameel978.github.io/Steam-Automation-Project/allure-action/Beta/allure-report/8411977881_1711313448312/#testresult/1e7a7545d1e8b731","status":"broken","statusDetails":"AttributeError: 'WebElement' object has no attribute 'get_screenshot_as_png'","time":{"start":1711312781574,"stop":1711312817808,"duration":36234}},{"uid":"b11856e117d36296","reportUrl":"https://jameel978.github.io/Steam-Automation-Project/allure-action/Beta/allure-report/8411251774_1711304811906/#testresult/b11856e117d36296","status":"passed","time":{"start":1711304475300,"stop":1711304519661,"duration":44361}},{"uid":"3991a5a089600bf6","reportUrl":"https://jameel978.github.io/Steam-Automation-Project/allure-action/Beta/allure-report/8411205111_1711304163158/#testresult/3991a5a089600bf6","status":"passed","time":{"start":1711304036228,"stop":1711304107985,"duration":71757}},{"uid":"447198e9d8039a1a","reportUrl":"https://jameel978.github.io/Steam-Automation-Project/allure-action/Beta/allure-report/8410924379_1711300896878/#testresult/447198e9d8039a1a","status":"passed","time":{"start":1711300796654,"stop":1711300842558,"duration":45904}},{"uid":"db9c35b8f85a9bdd","reportUrl":"https://jameel978.github.io/Steam-Automation-Project/allure-action/Beta/allure-report/8409853400_1711289315896/#testresult/db9c35b8f85a9bdd","status":"passed","time":{"start":1711289222691,"stop":1711289262528,"duration":39837}},{"uid":"2c9910096d56786e","reportUrl":"https://jameel978.github.io/Steam-Automation-Project/allure-action/Beta/allure-report/8409787496_1711288516415/#testresult/2c9910096d56786e","status":"broken","statusDetails":"FileNotFoundError: [Errno 2] No such file or directory: 'D:\\\\a\\\\Steam-Automation-Project\\\\Steam-Automation-Project\\\\Tests\\\\Steam_website\\\\Config\\\\Cart_UI_API_test.json'","time":{"start":1711288445222,"stop":1711288445222,"duration":0}}]},"tags":[]},"source":"b9b204282d56cf84.json","parameterValues":[]}